以下の問題(1),(2)を解いて、回答を提出しなさい。
なお、(1)は、プログラムの冒頭に、作成にあたって工夫、苦労した点をコメントとして書くこと。また、プログラム中の各関数の定義部分の冒頭に、その関数の機能説明をコメントで書くこと。問題(2)は、プログラムの変更部分のみを抜粋し、修正理由を文章で説明すること。

(1) select()を使って、N人でチャットをするプログラムを作りなさい。 Nはプログラムの起動時に（コマンドライン引数などで）与えるものとする。チャットはN人の参加者が全員揃ってから始められればよい。発言の順番を決めずに自由な順番で発言ができるよう になっていること。発言者が誰かわかるように、プログラムの起動時に 名前（ニックネーム）を入力（コマンドライン指定でもよい）させて、発言文の 前に付加すること。
また、余力があれば以下の機能を付加してみなさい。

自分の発言の入力と他の参加者の発言を見やすく区別するための工夫（何か画面制御を する等）をしてみなさい。
参加者のうち、誰かが抜けても残りの参加者で会話を続けられるようにしてみなさい。
(注) サンプルプログラムを「参考」にして作成するのはもちろん構いませんが、サンプルプログラムを「修正」して作成するのではありません。まずはプログラム全体の大まかな流れを考えて、細部についてはサンプルプログラムを参考にしながら作成するとよいでしょう。時々、サンプルプログラムを元にして最小限の修正量でプログラムを作成しようとして、かえって分かりにくいプログラムを作ってしまう人がいますので注意してください。関数名や変数名もなるべく分かりやすいものを付けること。


(2) サンプルプログラム(クライアント部分)では、何らかの原因でサーバプログラムが ダウン（強制終了された場合等）したとしてもそれを知ることができない （何回かEnterキーを押しているとそのうち終了する）。 サーバプログラムがダウンしたら、「Server is down.」等のメッセージを表示 して終了するようにクライアントを改良しなさい。 なお、提出は、変更したファイル名と変更した部分のみでよい。 (Hint. サーバプロセスが終了するとき、FINパケットをクライアントに 送信する。パケットを受信するのであるから、クライアント側のソケットは 読み出し可になるはず。そのとき、recv()を実行するとどうなるか？)

(注)オンラインテキストで提出する場合、回答文中のソースコードの部分は、「整形済み」モードで書くこと。（インデントがなくなってしまうので）
ライブラリのソースコードの提出は不要である。





おおまかな仕様をきめる

サーバーの起動
./chat -S -s localhost -p 50000 -n 3

クライアントの起動
./chat -C -s localhost -p 50000

ファイルの構成
chat.c
    quiz.cを参考にする
    オプションを読み取って，main関数内でchat_server()かchat_client()を呼び出す
chat_client.c
    chat_client()関数の実装を書く.
    内容はquiz_client.cとほぼ同じはず！
chat_common.c
    quiz_common.cと同じ内容をかく．sendやrecvのラッパー関数を書く
chat.h
    一番最後に書く．quiz.hを参考にプロトタイプ宣言を書く．
chat_server.c
    quiz_server.cとほぼ同じはず！
    chat_server()
        init_tcpserver()でサーバーの初期化
        init_client()でクライアントの初期化
        chat_loop()でクライアントとのやりとりのメインループ
chat_util.c
    init_client()の実装．
        クライアントの人数分のメモリ確保して，client_login()を呼び出す
    chat_loop()の実装．
        handle_message()でチャットのやり取りを行う．
    client_login()の実装
        ユーザー名を保存したりする．
    handle_message()の実装
        誰かが発言したら，それを受け取って，全員に表示させる．
        このとき，発言者の名前をはじめに表示させる
    chop_nl()の実装
        便利そうなのでそのまま写経する．
        文字列の末尾の改行コードを削除する．
